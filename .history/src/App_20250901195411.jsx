import React, { useState } from "react";

function App() {
  const [tasks, setTasks] = useState([
    { id: 1, title: "–ö—É–ø–∏—Ç—å —Ö–ª–µ–±", completed: false },
    { id: 2, title: "–°–¥–µ–ª–∞—Ç—å To-Do", completed: true },
  ]);
  const [newTask, setNewTask] = useState("");
  const [filter, setFilter] = useState("all"); // all | active | completed
  const [search, setSearch] = useState("");
  const [editingId, setEditingId] = useState(null);
  const [editingText, setEditingText] = useState("");

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
  const addTask = () => {
    if (!newTask.trim()) return;
    setTasks([...tasks, { id: Date.now(), title: newTask, completed: false }]);
    setNewTask("");
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ/–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
  const toggleTask = (id) => {
    setTasks(
      tasks.map((task) =>
        task.id === id ? { ...task, completed: !task.completed } : task
      )
    );
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ
  const deleteTask = (id) => {
    setTasks(tasks.filter((task) => task.id !== id));
  };

  // –ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  const startEdit = (task) => {
    setEditingId(task.id);
    setEditingText(task.title);
  };

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  const saveEdit = (id) => {
    setTasks(
      tasks.map((task) =>
        task.id === id ? { ...task, title: editingText } : task
      )
    );
    setEditingId(null);
    setEditingText("");
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è + –ø–æ–∏—Å–∫
  const filteredTasks = tasks
    .filter((task) => {
      if (filter === "active") return !task.completed;
      if (filter === "completed") return task.completed;
      return true;
    })
    .filter((task) =>
      task.title.toLowerCase().includes(search.toLowerCase())
    );

  return (
    <div style={{ maxWidth: 400, margin: "0 auto" }}>
      <h1>To-Do List</h1>

      {/* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ */}
      <input
        value={newTask}
        onChange={(e) => setNewTask(e.target.value)}
        placeholder="–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"
      />
      <button onClick={addTask}>–î–æ–±–∞–≤–∏—Ç—å</button>

      {/* –ü–æ–∏—Å–∫ */}
      <input
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        placeholder="–ü–æ–∏—Å–∫..."
        style={{ display: "block", marginTop: "10px" }}
      />

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div style={{ marginTop: "10px" }}>
        <button onClick={() => setFilter("all")}>All</button>
        <button onClick={() => setFilter("active")}>Active</button>
        <button onClick={() => setFilter("completed")}>Completed</button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á */}
      <ul style={{ marginTop: "20px" }}>
        {filteredTasks.map((task) => (
          <li key={task.id}>
            <input
              type="checkbox"
              checked={task.completed}
              onChange={() => toggleTask(task.id)}
            />
            {editingId === task.id ? (
              <>
                <input
                  value={editingText}
                  onChange={(e) => setEditingText(e.target.value)}
                />
                <button onClick={() => saveEdit(task.id)}>üíæ</button>
              </>
            ) : (
              <>
                <span
                  style={{
                    textDecoration: task.completed ? "line-through" : "none",
                  }}
                >
                  {task.title}
                </span>
                <button onClick={() => startEdit(task)}>‚úèÔ∏è</button>
                <button onClick={() => deleteTask(task.id)}>‚ùå</button>
              </>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;